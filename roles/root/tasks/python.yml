---
- name: install python build dependencies
  package:
    name:
      - clang
      - geos
      - geos-devel
      - gnutls-devel
      - libffi-devel
      - libmemcached-devel
      - ncurses-devel
      - openssl-devel
      - pcre-devel
      - postgresql-devel
      - readline-devel
      - sqlite-devel
  tags:
    - build
  when: ansible_distribution == 'Fedora'

- name: fetch python tarballs
  get_url:
    url: https://www.python.org/ftp/python/{{ python_version }}/Python-{{ python_version }}.tgz
    dest: /usr/local/src/Python-{{ python_version }}.tar.gz
    mode: 0644
    owner: root
    group: wheel
  tags:
    - build

- name: extract tarball
  unarchive:
    src: /usr/local/src/Python-{{ python_version }}.tar.gz
    dest: /usr/local/src
    remote_src: yes
  tags:
    - build

- name: configure python{{ python_version }} src with optimizations
  command:
    cmd: ./configure --prefix=/usr/local --enable-optimizations --with-ensurepip=install --enable-loadable-sqlite-extensions --enable-shared LDFLAGS="-Wl,-rpath,/usr/local/lib"
    chdir: /usr/local/src/Python-{{ python_version }}
  tags:
    - build

- name: compile python{{ python_version }}
  command: make -j8 build_all
  args:
    chdir: /usr/local/src/Python-{{ python_version }}
  tags:
    - build

- name: install python{{ python_version }}
  command: make -j8 altinstall
  args:
    chdir: /usr/local/src/Python-{{ python_version }}
  tags:
    - build

## cleanup src code
- name: cleanup python src (1)
  file:
    path: /usr/local/src/Python-{{ python_version }}.tar.gz
    state: absent
  tags:
    - cleanup

- name: cleanup python src (2)
  file:
    path: /usr/local/src/Python-{{ python_version }}
    state: absent
  tags:
    - cleanup

## pip upgrade
- name: pip upgrade
  command: "/usr/local/bin/python{{ python_version | version_minor }} -m pip install --upgrade pip"
  tags:
    - build

- name: Add LD_LIBRARY_PATH
  lineinfile:
    dest: /etc/ld.so.conf
    line: /usr/local/lib
    state: present
  tags:
    - build

- name: reload ldconfig
  command:
    cmd: ldconfig
  tags:
    - build

- name: Install virtualenv via pip
  pip:
    name:
      - virtualenv
      - black
      - pipx
    executable: "/usr/local/bin/pip{{ python_version | version_minor }}"
  tags:
    - pip
