# [+] 1. download nginx
# [+] 2. enable nginx
# [+] 3. create user with the name of the web app
# [+] 4. create virtualenv with uwsgi installed ln to  /opt/venvs/uwsgi
# [+] 5. clone webapp ln to /opt/{name_of_app}
# [+] 6. create virtualenv with webapp installed ln to  /opt/venvs/{name_of_app}
#       install git-secret
#       import private gpg key
#       reveal private secrets
# [+] 7. decrypt secrets
# [+] 8. add emperor uwsgi ini files to /etc/uwsgi/emperor.ini
# [+] 9. add appropriate vassal to /etc/uwsgi/vassals
# [+] 10. add systemd service file to /etc/systemd/system/emperor.uwsgi.service
# [+] 11. add systemd socket file to /etc/systemd/system/emperor.uwsgi.socket
# [+] 12. enable socket - sudo systemctl enable emperor.uwsgi.socket
# [+] 13. add nginx conf
# [+] 14. reload nginx
# [+] 15. open http ssl ports
#     16. app logs need logrotate enabled
#     17. add logrotate.conf to > /etc/logrotate.d/
---
- import_tasks: git_secret.yml
  become: true
- name: Install virtualenv via pip
  pip:
    name: virtualenv
    executable: "pip3.6"
  become: true
- name: add service user
  user:
    name: "{{ appname }}"
  become: true
- import_tasks: service_user.yml
  become: true
  become_user: "{{ appname }}"
  become_method: sudo
- name: add private gpg key
  command: 
    cmd: "gpg --import {{ private_gpg_key }}"
  become: true
- name: decrypt envrc file
  command:
    cmd: git-secret reveal
    chdir: "/opt/{{ appname }}"
  become: true
- import_tasks: uwsgi.yml
  become: true
- import_tasks: nginx.yml
  become: true
- import_tasks: systemd.yml
  become: true
- name: open http port
  firewalld:
    service: http
    permanent: yes
    immediate: yes
    state: enabled
