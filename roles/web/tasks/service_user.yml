---
- name: set deploy/private key paths
  set_fact:
    deploy_key_path: /tmp/.deploy
    gpg_key_path: /tmp/.private
- name: add deploy key
  template:
    src: templates/deploy_key.j2
    dest: "{{ deploy_key_path }}"
    owner: "{{ appname }}"
    group: "{{ appname }}"
    mode: 0400
- name: clone app
  # possible permissions error
  git:
    accept_hostkey: yes
    dest: "/opt/{{ appname }}"
    repo: "{{ app_repo_link }}"
    version: "{{ release }}"
    key_file: "{{ deploy_key_path }}"
  notify:
    - delete deploy key
- name: install app requirements
  pip:
    requirements: "/opt/{{ appname }}/requirements.txt"
    virtualenv: "/opt/{{ appname }}/env"
    virtualenv_python: "python3.8"
- name: install app
  pip:
    name: "/opt/{{ appname }}"
    editable: "yes"
    virtualenv: "/opt/{{ appname }}/env"
    virtualenv_python: "python3.8"
- name: add private key file
  template:
    src: templates/private_key.j2
    dest: "{{ gpg_key_path }}"
    owner: "{{ appname }}"
    group: "{{ appname }}"
    mode: 0400
- name: import private gpg key
  command:
    cmd: gpg2  --pinentry-mode=loopback --passphrase {{ private_gpg_key_pass }} --import {{ gpg_key_path }}
- name: decrypt envrc file
  command:
    cmd: git-secret reveal -p {{ private_gpg_key_pass }}
    chdir: "/opt/{{ appname }}"
  environment:
    SECRETS_GPG_COMMAND: gpg2
  notify:
    - delete private key
